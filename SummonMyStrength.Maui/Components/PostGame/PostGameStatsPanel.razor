@using SummonMyStrength.Maui.Services
@implements IDisposable
@inject IPostGameStatsService PostGameStatsService

@if (PostGameStatsService.PostGameStats != null && DataStore.PostGameGraphStatIds != null && DataStore.PostGameGraphStatIds.Count > 0)
{
    <div class="post-game-stats">
        <MudText Typo="Typo.h6">Game Stats</MudText>

        @foreach (var statId in DataStore.PostGameGraphStatIds)
    {
        var statReader = PostGameStatsService.StatReaders.FirstOrDefault(x => x.Value.Key == statId);

        if (statReader != null)
        {
            <PostGameStatGraph LocalSummonerName="@PostGameStatsService.PostGameStats.LocalPlayer.SummonerName"
                                   StatReader="statReader.Value"
                                   Stats="PostGameStatsService.PostGameStats" />
        }
    }
    </div>
}

@code {
protected override void OnInitialized()
{
    PostGameStatsService.PostGameStatsChanged += OnPostGameStatsChanged;
}

public void Dispose()
{
    PostGameStatsService.PostGameStatsChanged -= OnPostGameStatsChanged;
}

private async Task OnPostGameStatsChanged()
{
    await InvokeAsync(StateHasChanged);
}
}